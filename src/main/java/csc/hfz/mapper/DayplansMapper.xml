<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="csc.hfz.mapper.DayplansMapper" >
  <resultMap id="BaseResultMap" type="csc.hfz.pojo.Dayplans" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="years" property="years" jdbcType="VARCHAR" />
    <result column="months" property="months" jdbcType="VARCHAR" />
    <result column="days" property="days" jdbcType="VARCHAR" />
    <result column="IntolNum" property="intolnum" jdbcType="DOUBLE" />
    <result column="sticksNum" property="sticksnum" jdbcType="DOUBLE" />
    <result column="sticksWeight" property="sticksweight" jdbcType="DOUBLE" />
    <result column="Beam" property="beam" jdbcType="DOUBLE" />
    <result column="stauts" property="stauts" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, years, months, days, IntolNum, sticksNum, sticksWeight, Beam, stauts
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="csc.hfz.pojo.DayplansExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dayplans
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from dayplans
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from dayplans
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="csc.hfz.pojo.DayplansExample" >
    delete from dayplans
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="csc.hfz.pojo.Dayplans" >
    insert into dayplans (id, years, months, 
      days, IntolNum, sticksNum, 
      sticksWeight, Beam, stauts
      )
    values (#{id,jdbcType=BIGINT}, #{years,jdbcType=VARCHAR}, #{months,jdbcType=VARCHAR}, 
      #{days,jdbcType=VARCHAR}, #{intolnum,jdbcType=DOUBLE}, #{sticksnum,jdbcType=DOUBLE}, 
      #{sticksweight,jdbcType=DOUBLE}, #{beam,jdbcType=DOUBLE}, #{stauts,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="csc.hfz.pojo.Dayplans" >
    insert into dayplans
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="years != null" >
        years,
      </if>
      <if test="months != null" >
        months,
      </if>
      <if test="days != null" >
        days,
      </if>
      <if test="intolnum != null" >
        IntolNum,
      </if>
      <if test="sticksnum != null" >
        sticksNum,
      </if>
      <if test="sticksweight != null" >
        sticksWeight,
      </if>
      <if test="beam != null" >
        Beam,
      </if>
      <if test="stauts != null" >
        stauts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="years != null" >
        #{years,jdbcType=VARCHAR},
      </if>
      <if test="months != null" >
        #{months,jdbcType=VARCHAR},
      </if>
      <if test="days != null" >
        #{days,jdbcType=VARCHAR},
      </if>
      <if test="intolnum != null" >
        #{intolnum,jdbcType=DOUBLE},
      </if>
      <if test="sticksnum != null" >
        #{sticksnum,jdbcType=DOUBLE},
      </if>
      <if test="sticksweight != null" >
        #{sticksweight,jdbcType=DOUBLE},
      </if>
      <if test="beam != null" >
        #{beam,jdbcType=DOUBLE},
      </if>
      <if test="stauts != null" >
        #{stauts,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="csc.hfz.pojo.DayplansExample" resultType="java.lang.Integer" >
    select count(*) from dayplans
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dayplans
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.years != null" >
        years = #{record.years,jdbcType=VARCHAR},
      </if>
      <if test="record.months != null" >
        months = #{record.months,jdbcType=VARCHAR},
      </if>
      <if test="record.days != null" >
        days = #{record.days,jdbcType=VARCHAR},
      </if>
      <if test="record.intolnum != null" >
        IntolNum = #{record.intolnum,jdbcType=DOUBLE},
      </if>
      <if test="record.sticksnum != null" >
        sticksNum = #{record.sticksnum,jdbcType=DOUBLE},
      </if>
      <if test="record.sticksweight != null" >
        sticksWeight = #{record.sticksweight,jdbcType=DOUBLE},
      </if>
      <if test="record.beam != null" >
        Beam = #{record.beam,jdbcType=DOUBLE},
      </if>
      <if test="record.stauts != null" >
        stauts = #{record.stauts,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dayplans
    set id = #{record.id,jdbcType=BIGINT},
      years = #{record.years,jdbcType=VARCHAR},
      months = #{record.months,jdbcType=VARCHAR},
      days = #{record.days,jdbcType=VARCHAR},
      IntolNum = #{record.intolnum,jdbcType=DOUBLE},
      sticksNum = #{record.sticksnum,jdbcType=DOUBLE},
      sticksWeight = #{record.sticksweight,jdbcType=DOUBLE},
      Beam = #{record.beam,jdbcType=DOUBLE},
      stauts = #{record.stauts,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="csc.hfz.pojo.Dayplans" >
    update dayplans
    <set >
      <if test="years != null" >
        years = #{years,jdbcType=VARCHAR},
      </if>
      <if test="months != null" >
        months = #{months,jdbcType=VARCHAR},
      </if>
      <if test="days != null" >
        days = #{days,jdbcType=VARCHAR},
      </if>
      <if test="intolnum != null" >
        IntolNum = #{intolnum,jdbcType=DOUBLE},
      </if>
      <if test="sticksnum != null" >
        sticksNum = #{sticksnum,jdbcType=DOUBLE},
      </if>
      <if test="sticksweight != null" >
        sticksWeight = #{sticksweight,jdbcType=DOUBLE},
      </if>
      <if test="beam != null" >
        Beam = #{beam,jdbcType=DOUBLE},
      </if>
      <if test="stauts != null" >
        stauts = #{stauts,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="csc.hfz.pojo.Dayplans" >
    update dayplans
    set 
      IntolNum = #{intolnum,jdbcType=DOUBLE},
      sticksNum = #{sticksnum,jdbcType=DOUBLE},
      sticksWeight = #{sticksweight,jdbcType=DOUBLE},
      Beam = #{beam,jdbcType=DOUBLE}     
    where id = #{id,jdbcType=BIGINT}
  </update>
  
    <!-- 返回对应年，月的账单 -->
  <select id="selectAllLimitByYearAndMonth" resultMap="BaseResultMap" parameterType="String">
    select 
      *
    from dayplans
    where years = #{0} and months = #{1}
  </select>
  
  <!-- 更新状态 -->
   <update id="updateStautsById" parameterType="csc.hfz.pojo.Dayplans" >
    update dayplans
    set 
      stauts = #{stauts,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <!-- 根据分页数据start 和size查询数据 -->
	<select id="findByPage" parameterType="Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from dayplans where  years = #{Year} and months = #{Month}
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	
	<!-- 查询记录总数 -->
	<select id="selectCount" resultType="int" parameterType="String">
		select count(*) from dayplans  where  years = #{0} and months = #{1}
	</select> 
  
</mapper>